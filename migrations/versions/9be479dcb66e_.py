"""empty message

Revision ID: 9be479dcb66e
Revises: 
Create Date: 2017-01-01 13:12:13.189664

"""
from alembic import op
import sqlalchemy as sa

import application

# revision identifiers, used by Alembic.
revision = '9be479dcb66e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('slack_team_access_token',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_table('Cafes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('slack_team_id', sa.String(), nullable=True),
    sa.Column('slack_user_id', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('device', sa.String(), nullable=True),
    sa.Column('tutor', sa.Boolean(), nullable=True),
    sa.Column('teacher', sa.Boolean(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('alerts', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RegistrationIDs',
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('regid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['userid'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('userid', 'regid')
    )
    op.create_table('money_exchange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payerid', sa.Integer(), nullable=True),
    sa.Column('payeeid', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['payeeid'], ['Users.id'], ),
    sa.ForeignKeyConstraint(['payerid'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('objtype', sa.String(), nullable=True),
    sa.Column('objid', sa.Integer(), nullable=True),
    sa.Column('time', application.models.UTCOnlyDateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person', sa.Integer(), nullable=True),
    sa.Column('time', application.models.UTCOnlyDateTime(), nullable=True),
    sa.Column('cafeid', sa.Integer(), nullable=True),
    sa.Column('pickup', sa.String(), nullable=True),
    sa.Column('is_open', sa.Boolean(), nullable=True),
    sa.Column('modified', application.models.UTCOnlyDateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cafeid'], ['Cafes.id'], ),
    sa.ForeignKeyConstraint(['person'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cafeid', sa.Integer(), nullable=True),
    sa.Column('price_key', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['cafeid'], ['Cafes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Coffees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person', sa.Integer(), nullable=True),
    sa.Column('coffee', sa.String(), nullable=True),
    sa.Column('runid', sa.Integer(), nullable=True),
    sa.Column('modified', application.models.UTCOnlyDateTime(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=True),
    sa.Column('starttime', application.models.UTCOnlyDateTime(), nullable=True),
    sa.Column('endtime', application.models.UTCOnlyDateTime(), nullable=True),
    sa.Column('expired', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['person'], ['Users.id'], ),
    sa.ForeignKeyConstraint(['runid'], ['Runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Coffees')
    op.drop_table('Prices')
    op.drop_table('Runs')
    op.drop_table('Events')
    op.drop_table('money_exchange')
    op.drop_table('RegistrationIDs')
    op.drop_table('Users')
    op.drop_table('Cafes')
    op.drop_table('slack_team_access_token')
    # ### end Alembic commands ###
